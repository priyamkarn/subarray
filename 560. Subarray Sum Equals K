class Solution {
public:
    int subarraySum(vector<int>& nums, int k) {
        int n=nums.size();
        int prefix[n];
        prefix[0]=nums[0];
        for(int i=1;i<n;i++)
        {
            prefix[i]=prefix[i-1]+nums[i];
        }
        int ans=0;
        unordered_map<int,int>ump;
        for(int i=0;i<n;i++)
        {
            if(prefix[i]==k)
            {
                ans++;
            }
            int j=prefix[i]-k;
            if(ump.find(j)!=ump.end())
            {
                ans+=ump[prefix[i]-k];
            }
            ump[prefix[i]]++;
        }
        return ans;
    }
};
